{ config, pkgs, lib, ... }:
let

  master = import (fetchTarball https://github.com/NixOS/nixpkgs/archive/master.tar.gz) { config = config.nixpkgs.config; };

in
{

  home.packages = with pkgs; [
    master.clpm
    ecl
    sbcl
  ];

  # SBCL config
  home.file.".sbclrc".text = ''
    (setf sb-impl::*default-external-format* :utf-8)
    (setf sb-alien::*default-c-string-external-format* :utf-8)

    ;;; Use CLPM with default configuration.
    ;;;
    ;;; Generated by CLPM 0.3.5
    (require "asdf")
    #-clpm-client
    (when (asdf:find-system "clpm-client" nil)
      ;; Load the CLPM client if we can find it.
      (asdf:load-system "clpm-client")
      (when (uiop:symbol-call :clpm-client '#:active-context)
        ;; If started inside a context (i.e., with `clpm exec` or `clpm bundle exec`),
        ;; activate ASDF integration
        (uiop:symbol-call :clpm-client '#:activate-asdf-integration)))
  '';

  # ECL config
  home.file.".eclrc".text = ''
    ;;; Use CLPM with default configuration.
    ;;;
    ;;; Generated by CLPM 0.3.5
    (require 'asdf)
    #-clpm-client
    (when (asdf:find-system "clpm-client" nil)
      ;; Load the CLPM client if we can find it.
      (asdf:load-system "clpm-client")
      (when (uiop:symbol-call :clpm-client '#:active-context)
        ;; If started inside a context (i.e., with `clpm exec` or `clpm bundle exec`),
        ;; activate ASDF integration
        (uiop:symbol-call :clpm-client '#:activate-asdf-integration)))
  '';

  # ASDF source registry
  home.file.".config/common-lisp/source-registry.conf.d/20-clpm-client.conf".text = ''
    ;; -*- mode: common-lisp; -*-
    ;; Auto generated by CLPM version 0.3.5
      (:directory #P"~/.nix-profile/lib/clpm/client/")
  '';

  # CLPM sources file
  home.file.".config/clpm/sources.conf".text = ''
    ("quicklisp"
      :type :ql-clpi
      :url "https://quicklisp.common-lisp-project-index.org/")
  '';

}
